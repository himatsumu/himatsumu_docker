services:
  react-app:
    image: react-app:latest
    container_name: react-app
    build:
      context: ./react-app
      dockerfile: ./Dockerfile
      target: build
    ports:
      - "${REACT_PORT}:${REACT_PORT}"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - TZ=${TZ}
    env_file:
      - .env
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_MULTIPLE_DATABASES: ${DB_MULTIPLE_DATABASES}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      TZ: ${TZ}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./init_scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  go-server:
    image: go-server:latest
    container_name: go-server
    build:
      context: ./go-server
      dockerfile: ./Dockerfile
      target: build
    ports:
      - "${GO_PORT}:${GO_PORT}"
    environment:
      - GO_ENV=development
    env_file:
      - .env

  python-service:
    image: python-service:latest
    container_name: python-service
    build:
      context: ./python-service
      dockerfile: ./Dockerfile
      target: build
    ports:
      - "${PYTHON_PORT}:${PYTHON_PORT}"
    environment:
      - PYTHON_ENV=development
    env_file:
      - .env

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    build:
      context: ./auth_service
      dockerfile: ./Dockerfile
      target: build
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    environment:
      - GO_ENV=development
      - DB_HOST=postgres-db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${AUTH_DB_NAME}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - AUTH_CALLBACK_URL=${AUTH_CALLBACK_URL}
    env_file:
      - .env
    depends_on:
      postgres-db:
        condition: service_healthy